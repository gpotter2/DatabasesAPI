Databases API
  
Hey ! :D

Here's a API to use MySQL and SQLite functions in java to use with bukkit/craftbukkit servers.

The API is now safe against SQL Injections !

Installation:

Just add the 2 classes (DatabasesHandler.java & DatabasesUtil.java) to your plugin.

Usage:

Setting up the Handler:
First, create a new instance of the DatabasesHandler class. This will be different if you are using MySQL or SQLite:
MySQL
[code=java]DatabasesHandler handler = new DatabasesHandler(DatabaseType.MYSQL, "my_table_name");[/code]

SQLite
[code=java]String path = getDataFolder().getAbsolutePath() +  File.separator + "database.db";
DatabasesHandler handler = new DatabasesHandler(DatabaseType.SQLITE, "my_table_name", path);[/code]

Then init the handler with init():

MySQL
[code=java]handler.init("host", "user", "password", "database_name", "port (default:3306)", "primary_key_name");[/code]

SQLite
[code=java]handler.init(null, null, null, "database_name", null, "primary_key_name");[/code]

Add (if not exist) columns:
Then you can add the columns (just add them, if they already exist, the handler will ignore it). The function works with the ObjectType enum. It correspond to the type of the data that will be contained in the column. You can see them in the docs. Here, VARCHAR is a String.
[code=java]handler.addColumn("name", ObjectType.VARCHAR);
handler.addColumn("value", ObjectType.VARCHAR);[/code]

You can now start to use the databases ! A dataObject will be insert in the line that correspond to all conditions (it may create the line). The "Condition" means "WHERE key=value" so (WHERE 'name'="my_object") would be new Condition("name", "my_object);
Available Functions:

Insert (or update if exist) a value:
[code=java]DataObject[] da = new DataObject[2];
da[0] = new DataObject("name", "my_object");
da[1] = new DataObject("value", "Hey !");
handler.InsertOrUpdateValue(da, new Condition("name", "my_object");[/code]

Force Insert a value even if it already exist (deprecated):
[code=java]DataObject[] da = new DataObject[2];
da[0] = new DataObject("name", "my_object");
da[1] = new DataObject("value", "Hey !");
handler.InsertValueForce(da);[/code]

Get all values that correspond to a Condition:
[code=java]List<Object> values = handler.getValues("value", new Condition("name", "my_object"));[/code]
Here, values contains only one object: a String: "Hey !"

Detect if a value exist with Conditions:
[code=java]boolean exist = handler.existInTable(new Condition("name", "my_object"));[/code]

Get the number of objects existing with Conditions:
[code=java]int number_exist = handler.numberObjectsInTable(new Condition("name", "my_object"));[/code]

Delete a value with Conditions:
[code=java]handler.deleteObject(new Condition("name", "my_object"));[/code]

Clear a table:
[code=java]handler.clearTable();[/code]

Download:

GitHub

I hope this API will be useful for some one :D
